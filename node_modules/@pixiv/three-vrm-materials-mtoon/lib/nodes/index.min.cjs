/*! (c) 2019-2024 pixiv Inc. - https://github.com/pixiv/three-vrm/blob/release/LICENSE */
"use strict";var Ne=Object.create;var v=Object.defineProperty;var He=Object.getOwnPropertyDescriptor;var xe=Object.getOwnPropertyNames;var Me=Object.getPrototypeOf,ge=Object.prototype.hasOwnProperty;var Se=(r,e)=>{for(var t in e)v(r,t,{get:e[t],enumerable:!0})},Y=(r,e,t,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of xe(e))!ge.call(r,n)&&n!==t&&v(r,n,{get:()=>e[n],enumerable:!(o=He(e,n))||o.enumerable});return r};var c=(r,e,t)=>(t=r!=null?Ne(Me(r)):{},Y(e||!r||!r.__esModule?v(t,"default",{value:r,enumerable:!0}):t,r)),be=r=>Y(v({},"__esModule",{value:!0}),r);var Ce={};Se(Ce,{MToonAnimatedUVNode:()=>p,MToonLightingModel:()=>f,MToonNodeMaterial:()=>L});module.exports=be(Ce);var B=c(require("three"),1),X=parseInt(B.REVISION,10);X<167&&console.warn(`MToonNodeMaterial requires Three.js r167 or higher (You are using r${X}). This would not work correctly.`);var s=c(require("three/webgpu"),1);var a=c(require("three/webgpu"),1),K=a.materialReference("color","color"),q=a.materialReference("map","texture"),Z=a.materialReference("normalMap","texture"),$=a.materialReference("normalScale","vec2"),G=a.materialReference("emissive","color"),J=a.materialReference("emissiveIntensity","float"),Q=a.materialReference("emissiveMap","texture"),ee=a.materialReference("shadeColorFactor","color"),te=a.materialReference("shadingShiftFactor","float"),P=a.materialReference("shadeMultiplyTexture","texture"),ie=a.materialReference("shadeMultiplyTextureScale","float"),oe=a.materialReference("shadingToonyFactor","float"),re=a.materialReference("rimLightingMixFactor","float"),ae=a.materialReference("rimMultiplyTexture","texture"),ne=a.materialReference("matcapFactor","color"),le=a.materialReference("matcapTexture","texture"),se=a.materialReference("parametricRimColorFactor","color"),de=a.materialReference("parametricRimLiftFactor","float"),ue=a.materialReference("parametricRimFresnelPowerFactor","float"),ce=a.materialReference("outlineWidthMultiplyTexture","texture"),me=a.materialReference("outlineWidthFactor","float"),w=a.materialReference("outlineColorFactor","color"),Ee=a.materialReference("outlineLightingMixFactor","float"),he=a.materialReference("uvAnimationMaskTexture","texture"),pe=a.materialReference("uvAnimationScrollXOffset","float"),Te=a.materialReference("uvAnimationScrollYOffset","float"),Re=a.materialReference("uvAnimationRotationPhase","float");var p=class extends s.TempNode{constructor(e){super("vec2"),this.hasMaskTexture=e}setup(){let e=1;this.hasMaskTexture&&(e=s.vec4(he).context({getUV:()=>s.uv()}).r);let t=s.uv(),o=Re.mul(e),n=s.cos(o),u=s.sin(o);t=t.sub(s.vec2(.5,.5)),t=t.mul(s.mat2(n,u,u.negate(),n)),t=t.add(s.vec2(.5,.5));let m=s.vec2(pe,Te).mul(e);return t=t.add(m),t.temp("AnimatedUV")}};var l=c(require("three/webgpu"),1);var d=c(require("three/webgpu"),1),y=d.nodeImmutable(d.PropertyNode,"vec3").temp("ShadeColor"),C=d.nodeImmutable(d.PropertyNode,"float").temp("ShadingShift"),O=d.nodeImmutable(d.PropertyNode,"float").temp("ShadingToony"),M=d.nodeImmutable(d.PropertyNode,"float").temp("RimLightingMix"),g=d.nodeImmutable(d.PropertyNode,"vec3").temp("RimMultiply"),S=d.nodeImmutable(d.PropertyNode,"vec3").temp("matcap"),b=d.nodeImmutable(d.PropertyNode,"vec3").temp("ParametricRim");var T=c(require("three/webgpu"),1),R=r=>parseInt(T.REVISION,10)>=168?T.Fn(r):T.tslFn(r);var Fe=R(({a:r,b:e,t})=>{let o=t.sub(r),n=e.sub(r);return o.div(n).clamp()}),ve=R(({dotNL:r})=>{let t=l.float(1).sub(O),o=r.add(C);return o=Fe({a:t.negate(),b:t,t:o}),o=o.mul(1),o}),ye=R(({shading:r,lightColor:e})=>{let t=l.mix(y,l.diffuseColor,r);return e.mul(l.BRDF_Lambert({diffuseColor:t}))}),f=class extends l.LightingModel{constructor(){super()}direct({lightDirection:e,lightColor:t,reflectedLight:o}){let n=l.transformedNormalView.dot(e).clamp(-1,1),u=ve({dotNL:n});o.directDiffuse.assign(o.directDiffuse.add(ye({shading:u,lightColor:t}))),o.directSpecular.assign(o.directSpecular.add(b.add(S).mul(g).mul(l.mix(l.vec3(0),l.BRDF_Lambert({diffuseColor:t}),M))))}indirect(e){this.indirectDiffuse(e),this.indirectSpecular(e)}indirectDiffuse({irradiance:e,reflectedLight:t}){t.indirectDiffuse.assign(t.indirectDiffuse.add(e.mul(l.BRDF_Lambert({diffuseColor:l.diffuseColor}))))}indirectSpecular({reflectedLight:e}){e.indirectSpecular.assign(e.indirectSpecular.add(b.add(S).mul(g).mul(l.mix(l.vec3(1),l.vec3(0),M))))}};var i=c(require("three/webgpu"),1);var N={None:"none",WorldCoordinates:"worldCoordinates",ScreenCoordinates:"screenCoordinates"};var H=c(require("three/webgpu"),1);var fe=R(({parametricRimLift:r,parametricRimFresnelPower:e,parametricRimColor:t})=>{let o=H.modelViewPosition.normalize(),n=H.transformedNormalView.dot(o.negate());return H.float(1).sub(n).add(r).clamp().pow(e).mul(t)});var L=class extends i.NodeMaterial{customProgramCacheKey(){let e=super.customProgramCacheKey();return e+=`isOutline:${this.isOutline},`,e}get isMToonNodeMaterial(){return!0}constructor(e={}){super(),e.transparentWithZWrite&&(e.depthWrite=!0),delete e.transparentWithZWrite,delete e.giEqualizationFactor,delete e.v0CompatShade,delete e.debugMode,this.emissiveNode=null,this.lights=!0,this.color=new i.Color(1,1,1),this.map=null,this.emissive=new i.Color(0,0,0),this.emissiveIntensity=1,this.emissiveMap=null,this.normalMap=null,this.normalScale=new i.Vector2(1,1),this.shadeColorFactor=new i.Color(0,0,0),this.shadeMultiplyTexture=null,this.shadingShiftFactor=0,this.shadingShiftTexture=null,this.shadingShiftTextureScale=1,this.shadingToonyFactor=.9,this.rimLightingMixFactor=1,this.rimMultiplyTexture=null,this.matcapFactor=new i.Color(1,1,1),this.matcapTexture=null,this.parametricRimColorFactor=new i.Color(0,0,0),this.parametricRimLiftFactor=0,this.parametricRimFresnelPowerFactor=5,this.outlineWidthMode=N.None,this.outlineWidthMultiplyTexture=null,this.outlineWidthFactor=0,this.outlineColorFactor=new i.Color(0,0,0),this.outlineLightingMixFactor=1,this.uvAnimationScrollXSpeedFactor=0,this.uvAnimationScrollYSpeedFactor=0,this.uvAnimationRotationSpeedFactor=0,this.uvAnimationMaskTexture=null,this.shadeColorNode=null,this.shadingShiftNode=null,this.shadingToonyNode=null,this.rimLightingMixNode=null,this.rimMultiplyNode=null,this.matcapNode=null,this.parametricRimColorNode=null,this.parametricRimLiftNode=null,this.parametricRimFresnelPowerNode=null,this.uvAnimationScrollXOffset=0,this.uvAnimationScrollYOffset=0,this.uvAnimationRotationPhase=0,this.isOutline=!1,this._animatedUVNode=null,this.setValues(e)}setupLightingModel(){return new f}setup(e){var t;this._animatedUVNode=new p((t=this.uvAnimationMaskTexture&&this.uvAnimationMaskTexture.isTexture===!0)!=null?t:!1),super.setup(e)}setupDiffuseColor(e){let t=null;if(this.colorNode==null){if(t=K,this.map&&this.map.isTexture===!0){let o=q.context({getUV:()=>this._animatedUVNode});t=t.mul(o)}this.colorNode=t}this.vertexColors===!0&&e.geometry.hasAttribute("color")&&(console.warn("MToonNodeMaterial: MToon ignores vertex colors. Consider using a model without vertex colors instead."),this.vertexColors=!1),super.setupDiffuseColor(e),parseInt(i.REVISION,10)<166&&this.transparent===!1&&this.blending===i.NormalBlending&&this.alphaToCoverage===!1&&i.diffuseColor.a.assign(1),this.colorNode===t&&(this.colorNode=null)}setupVariants(){y.assign(this._setupShadeColorNode()),C.assign(this._setupShadingShiftNode()),O.assign(this._setupShadingToonyNode()),M.assign(this._setupRimLightingMixNode()),g.assign(this._setupRimMultiplyNode()),S.assign(this._setupMatcapNode()),b.assign(this._setupParametricRimNode())}setupNormal(e){let t=this.normalNode;if(this.normalNode==null){if(this.normalNode=i.materialNormal,this.normalMap&&this.normalMap.isTexture===!0){let n=Z.context({getUV:()=>this._animatedUVNode});this.normalNode=i.normalMap(n,$)}this.isOutline&&(this.normalNode=this.normalNode.negate())}if(parseInt(i.REVISION,10)>=168){let n=this.normalNode;return this.normalNode=t,n}else{super.setupNormal(e),this.normalNode=t;return}}setupLighting(e){let t=null;if(this.emissiveNode==null){if(t=G.mul(J),this.emissiveMap&&this.emissiveMap.isTexture===!0){let n=Q.context({getUV:()=>this._animatedUVNode});t=t.mul(n)}this.emissiveNode=t}let o=super.setupLighting(e);return this.emissiveNode===t&&(this.emissiveNode=null),o}setupOutput(e,t){return this.isOutline&&this.outlineWidthMode!==N.None&&(t=i.vec4(i.mix(w,t.xyz.mul(w),Ee),t.w)),super.setupOutput(e,t)}setupPosition(e){var n,u;let t=this.positionNode;if(this.isOutline&&this.outlineWidthMode!==N.None){(n=this.positionNode)!=null||(this.positionNode=i.positionLocal);let m=i.normalLocal.normalize(),E=me;if(this.outlineWidthMultiplyTexture&&this.outlineWidthMultiplyTexture.isTexture===!0){let h=ce.context({getUV:()=>this._animatedUVNode});E=E.mul(h)}let F=i.length(i.modelNormalMatrix.mul(m)),x=E.mul(F).mul(m);if(this.outlineWidthMode===N.WorldCoordinates)this.positionNode=this.positionNode.add(x);else if(this.outlineWidthMode===N.ScreenCoordinates){let h=i.cameraProjectionMatrix.element(1).element(1);this.positionNode=this.positionNode.add(x.div(h).mul(i.positionView.z.negate()))}(u=this.positionNode)!=null||(this.positionNode=i.positionLocal)}let o=super.setupPosition(e);return o.z.add(o.w.mul(1e-6)),this.positionNode=t,o}copy(e){var t,o,n,u,m,E,F,x,h,A,V,W,j,I,U,_,z,k,D;return this.color.copy(e.color),this.map=(t=e.map)!=null?t:null,this.emissive.copy(e.emissive),this.emissiveIntensity=e.emissiveIntensity,this.emissiveMap=(o=e.emissiveMap)!=null?o:null,this.normalMap=(n=e.normalMap)!=null?n:null,this.normalScale.copy(e.normalScale),this.shadeColorFactor.copy(e.shadeColorFactor),this.shadeMultiplyTexture=(u=e.shadeMultiplyTexture)!=null?u:null,this.shadingShiftFactor=e.shadingShiftFactor,this.shadingShiftTexture=(m=e.shadingShiftTexture)!=null?m:null,this.shadingShiftTextureScale=e.shadingShiftTextureScale,this.shadingToonyFactor=e.shadingToonyFactor,this.rimLightingMixFactor=e.rimLightingMixFactor,this.rimMultiplyTexture=(E=e.rimMultiplyTexture)!=null?E:null,this.matcapFactor.copy(e.matcapFactor),this.matcapTexture=(F=e.matcapTexture)!=null?F:null,this.parametricRimColorFactor.copy(e.parametricRimColorFactor),this.parametricRimLiftFactor=e.parametricRimLiftFactor,this.parametricRimFresnelPowerFactor=e.parametricRimFresnelPowerFactor,this.outlineWidthMode=e.outlineWidthMode,this.outlineWidthMultiplyTexture=(x=e.outlineWidthMultiplyTexture)!=null?x:null,this.outlineWidthFactor=e.outlineWidthFactor,this.outlineColorFactor.copy(e.outlineColorFactor),this.outlineLightingMixFactor=e.outlineLightingMixFactor,this.uvAnimationScrollXSpeedFactor=e.uvAnimationScrollXSpeedFactor,this.uvAnimationScrollYSpeedFactor=e.uvAnimationScrollYSpeedFactor,this.uvAnimationRotationSpeedFactor=e.uvAnimationRotationSpeedFactor,this.uvAnimationMaskTexture=(h=e.uvAnimationMaskTexture)!=null?h:null,this.shadeColorNode=(A=e.shadeColorNode)!=null?A:null,this.shadingShiftNode=(V=e.shadingShiftNode)!=null?V:null,this.shadingToonyNode=(W=e.shadingToonyNode)!=null?W:null,this.rimLightingMixNode=(j=e.rimLightingMixNode)!=null?j:null,this.rimMultiplyNode=(I=e.rimMultiplyNode)!=null?I:null,this.matcapNode=(U=e.matcapNode)!=null?U:null,this.parametricRimColorNode=(_=e.parametricRimColorNode)!=null?_:null,this.parametricRimLiftNode=(z=e.parametricRimLiftNode)!=null?z:null,this.parametricRimFresnelPowerNode=(k=e.parametricRimFresnelPowerNode)!=null?k:null,this.isOutline=(D=e.isOutline)!=null?D:null,super.copy(e)}update(e){this.uvAnimationScrollXOffset+=e*this.uvAnimationScrollXSpeedFactor,this.uvAnimationScrollYOffset+=e*this.uvAnimationScrollYSpeedFactor,this.uvAnimationRotationPhase+=e*this.uvAnimationRotationSpeedFactor}_setupShadeColorNode(){if(this.shadeColorNode!=null)return i.vec3(this.shadeColorNode);let e=ee;if(this.shadeMultiplyTexture&&this.shadeMultiplyTexture.isTexture===!0){let t=P.context({getUV:()=>this._animatedUVNode});e=e.mul(t)}return e}_setupShadingShiftNode(){if(this.shadingShiftNode!=null)return i.float(this.shadingShiftNode);let e=te;if(this.shadingShiftTexture&&this.shadingShiftTexture.isTexture===!0){let t=P.context({getUV:()=>this._animatedUVNode});e=e.add(t.mul(ie))}return e}_setupShadingToonyNode(){return this.shadingToonyNode!=null?i.float(this.shadingToonyNode):oe}_setupRimLightingMixNode(){return this.rimLightingMixNode!=null?i.float(this.rimLightingMixNode):re}_setupRimMultiplyNode(){return this.rimMultiplyNode!=null?i.vec3(this.rimMultiplyNode):this.rimMultiplyTexture&&this.rimMultiplyTexture.isTexture===!0?ae.context({getUV:()=>this._animatedUVNode}):i.vec3(1)}_setupMatcapNode(){return this.matcapNode!=null?i.vec3(this.matcapNode):this.matcapTexture&&this.matcapTexture.isTexture===!0?le.context({getUV:()=>i.matcapUV.mul(1,-1).add(0,1)}).mul(ne):i.vec3(0)}_setupParametricRimNode(){let e=this.parametricRimColorNode!=null?i.vec3(this.parametricRimColorNode):se,t=this.parametricRimLiftNode!=null?i.float(this.parametricRimLiftNode):de,o=this.parametricRimFresnelPowerNode!=null?i.float(this.parametricRimFresnelPowerNode):ue;return fe({parametricRimLift:t,parametricRimFresnelPower:o,parametricRimColor:e})}};
